{"version":3,"sources":["./src/app/hello.component.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/$_lazy_route_resource lazy namespace object","./src/polyfills.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAiD;IAOpC,cAAc,SAAd,cAAc;CAE1B;;mBADE,mDAAK;;AADK,cAAc;IAL1B,+DAAS,CAAC;QACT,QAAQ,EAAE,OAAO;QACjB,QAAQ,EAAE,0BAA0B;;KAErC,CAAC;GACW,cAAc,CAE1B;AAF0B;;;;;;;;;;;;;ACP3B;AAAe,mEAAI,sBAAsB,GAAG,6CAA6C,+OAA+O,E;;;;;;;;;;;;;;;;;;;;;ACArR;IAOtC,YAAY,SAAZ,YAAY;;QACvB,WAAM,GAAW,UAAU,CAAC;QAC5B,aAAQ,GAAW,MAAM,CAAC,mBAAkB;IAC9C,CAAC;CAAA;AAHY,YAAY;IALxB,+DAAS,CAAC;QACT,QAAQ,EAAE,QAAQ;QAClB,gFAAmC;;KAEpC,CAAC;GACW,YAAY,CAGxB;AAHwB;;;;;;;;;;;;;ACPzB;AAAe,6GAA8C,QAAQ,yBAAyB,UAAU,cAAc,E;;;;;;;;;;;;;;;;;;;;;ACA7E;AACiB;AACb;AAEE;AACI;IAOtC,SAAS,SAAT,SAAS;CAAI;AAAb,SAAS;IALrB,8DAAQ,CAAC;QACR,OAAO,EAAO,CAAE,uEAAa,EAAE,0DAAW,CAAE;QAC5C,YAAY,EAAE,CAAE,2DAAY,EAAE,+DAAc,CAAE;QAC9C,SAAS,EAAK,CAAE,2DAAY,CAAE;KAC/B,CAAC;GACW,SAAS,CAAI;AAAJ;;;;;;;;;;;;ACZtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;GAcG;AAEH;;GAEG;AAEH,mEAAmE;AACnE,+BAA+B;AAC/B,+BAA+B;AAC/B,iCAAiC;AACjC,kCAAkC;AAClC,oCAAoC;AACpC,+BAA+B;AAC/B,6BAA6B;AAC7B,+BAA+B;AAC/B,6BAA6B;AAC7B,8BAA8B;AAC9B,+BAA+B;AAC/B,4BAA4B;AAC5B,4BAA4B;AAE5B,+EAA+E;AAC/E,oEAAoE;AAEpE,4EAA4E;AAC5E,8EAA8E;AAG9E,yCAAyC;AACzC,gCAAgC;AAChC,gCAAgC;AAGhC;;;;GAIG;AACH,8EAA8E;AAI9E;;GAEG;AACwB,CAAE,6BAA6B;AAG1D;;GAEG;AAEH;;;GAGG;AACH,oDAAoD;;;;;;;;;;;;;ACtEpD;AAAA;AAAA;AAAA;AAAqB;AAGsD;AAE9B;AAE7C,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;IAC7D,iDAAiD;IACjD,IAAI,MAAM,CAAC,OAAO,CAAC,EAAE;QACnB,MAAM,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC;KAC3B;IACD,MAAM,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC;IAEtB,gCAAgC;AAClC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'hello',\n  template: `<h1>Hello {{name}}!</h1>`,\n  styles: [`h1 { font-family: Lato; }`]\n})\nexport class HelloComponent  {\n  @Input() name: string;\n}\n","export default \"p {\\n  font-family: Lato;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsaUJBQWlCO0FBQ25CIiwiZmlsZSI6ImFwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsicCB7XG4gIGZvbnQtZmFtaWx5OiBMYXRvO1xufSJdfQ== */\";","import { Component, VERSION } from '@angular/core';\n\n@Component({\n  selector: 'my-app',\n  templateUrl: './app.component.html',\n  styleUrls: [ './app.component.css' ]\n})\nexport class AppComponent  {\n  nombre: string = 'Fernando';\n  apellido: string = 'Mart';//+ VERSION.major;\n}\n","export default \"<h1>Hola Mundo</h1>\\n\\n<ul>\\n  <li>Nombre: {{nombre}}</li>\\n  <li>Apellido: {{apellido}} </li>\\n</ul>\";","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { HelloComponent } from './hello.component';\n\n@NgModule({\n  imports:      [ BrowserModule, FormsModule ],\n  declarations: [ AppComponent, HelloComponent ],\n  bootstrap:    [ AppComponent ]\n})\nexport class AppModule { }\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/docs/ts/latest/guide/browser-support.html\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es6/symbol';\n// import 'core-js/es6/object';\n// import 'core-js/es6/function';\n// import 'core-js/es6/parse-int';\n// import 'core-js/es6/parse-float';\n// import 'core-js/es6/number';\n// import 'core-js/es6/math';\n// import 'core-js/es6/string';\n// import 'core-js/es6/date';\n// import 'core-js/es6/array';\n// import 'core-js/es6/regexp';\n// import 'core-js/es6/map';\n// import 'core-js/es6/set';\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/** IE10 and IE11 requires the following to support `@angular/animation`. */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n\n/** Evergreen browsers require these. **/\n// import 'core-js/es6/reflect';\n// import 'core-js/es7/reflect';\n\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n\n\n/***************************************************************************************************\n * Zone JS is required by Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n\n/**\n * Date, currency, decimal and percent pipes.\n * Needed for: All but Chrome, Firefox, Edge, IE11 and Safari 10\n */\n// import 'intl';  // Run `npm install --save intl`.","import './polyfills';\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule).then(ref => {\n  // Ensure Angular destroys itself on hot reloads.\n  if (window['ngRef']) {\n    window['ngRef'].destroy();\n  }\n  window['ngRef'] = ref;\n\n  // Otherwise, log the boot error\n}).catch(err => console.error(err));"],"sourceRoot":"webpack:///"}